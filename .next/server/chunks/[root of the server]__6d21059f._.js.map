{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file://C%3A/asong/asong/src/app/api/ai/route.ts"],"sourcesContent":["import { Chat } from \"@/models/chat\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport axios from 'axios';\r\n\r\n\r\nif(!process.env.DEEPSEEK_API_KEY) {\r\n  throw new Error(\"Deepseek api is not working\")\r\n}\r\n\r\n\r\n\r\nexport async function POST(req: NextRequest) {\r\n \r\n       \r\n\r\n        try {\r\n\r\n       \r\n          const { prompts } = await req.json();\r\n          \r\n        \r\n          if (!prompts || !Array.isArray(prompts)) {\r\n            return NextResponse.json({\r\n              error: \"Invalid message format\"\r\n\r\n            }, \r\n          {\r\n            status: 400\r\n          })\r\n          }\r\n        \r\n          \r\n          // Get AI response\r\n          const response = await axios.post(\r\n            \"https://openrouter.ai/api/v1/chat/completions\",\r\n            {\r\n              model: \"deepseek/deepseek-r1:free\",\r\n              messages: [{ role: \"user\", content: prompt }],\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: process.env.DEEPSEEK_API_KEY,\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n        \r\n          // Save AI response\r\n          const aiMessage = {\r\n            role: \"assistant\",\r\n            content: response.data.choices[0].message.content || \"No Response\",\r\n            timestamp: Date.now(),\r\n          };\r\n          \r\n          return NextResponse.json({ success: true, data: aiMessage });\r\n        } catch (error) {\r\n          console.error(\"Error:\", error);\r\n          return NextResponse.json(\r\n            { success: false, message: \"Internal server error\" },\r\n            { status: 500 }\r\n          );\r\n        }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":";;;AACA;AACA;;;AAGA,IAAG,CAAC,QAAQ,GAAG,CAAC,gBAAgB,EAAE;IAChC,MAAM,IAAI,MAAM;AAClB;AAIO,eAAe,KAAK,GAAgB;IAInC,IAAI;QAGF,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,IAAI,IAAI;QAGlC,IAAI,CAAC,WAAW,CAAC,MAAM,OAAO,CAAC,UAAU;YACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,OAAO;YAET,GACF;gBACE,QAAQ;YACV;QACA;QAGA,kBAAkB;QAClB,MAAM,WAAW,MAAM,uIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,iDACA;YACE,OAAO;YACP,UAAU;gBAAC;oBAAE,MAAM;oBAAQ,SAAS;gBAAO;aAAE;QAC/C,GACA;YACE,SAAS;gBACP,eAAe,QAAQ,GAAG,CAAC,gBAAgB;gBAC3C,gBAAgB;YAClB;QACF;QAGF,mBAAmB;QACnB,MAAM,YAAY;YAChB,MAAM;YACN,SAAS,SAAS,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,IAAI;YACrD,WAAW,KAAK,GAAG;QACrB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,MAAM;QAAU;IAC5D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,UAAU;QACxB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,SAAS;QAAwB,GACnD;YAAE,QAAQ;QAAI;IAElB;AACR","debugId":null}}]
}